<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qcby.dao.SongerMapper">
  <resultMap id="BaseResultMap" type="com.qcby.model.Songer">
    <id column="SRID" jdbcType="INTEGER" property="srid" />
    <result column="TID" jdbcType="INTEGER" property="tid" />
    <result column="SRNAME" jdbcType="VARCHAR" property="srname" />
    <result column="AREA" jdbcType="VARCHAR" property="area" />
    <result column="PIC" jdbcType="VARCHAR" property="pic" />
    <result column="IS_HOT" jdbcType="INTEGER" property="isHot" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.qcby.model.Songer">
    <result column="INTRO" jdbcType="LONGVARCHAR" property="intro" />
  </resultMap>
  <sql id="Base_Column_List">
    SRID, TID, SRNAME, AREA, PIC, IS_HOT
  </sql>
  <sql id="Blob_Column_List">
    INTRO
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from songer
    where SRID = #{srid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from songer
    where SRID = #{srid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qcby.model.Songer">
    insert into songer (SRID, TID, SRNAME, 
      AREA, PIC, IS_HOT, INTRO
      )
    values (#{srid,jdbcType=INTEGER}, #{tid,jdbcType=INTEGER}, #{srname,jdbcType=VARCHAR}, 
      #{area,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, #{isHot,jdbcType=INTEGER}, #{intro,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qcby.model.Songer">
    insert into songer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="srid != null">
        SRID,
      </if>
      <if test="tid != null">
        TID,
      </if>
      <if test="srname != null">
        SRNAME,
      </if>
      <if test="area != null">
        AREA,
      </if>
      <if test="pic != null">
        PIC,
      </if>
      <if test="isHot != null">
        IS_HOT,
      </if>
      <if test="intro != null">
        INTRO,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="srid != null">
        #{srid,jdbcType=INTEGER},
      </if>
      <if test="tid != null">
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="srname != null">
        #{srname,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="isHot != null">
        #{isHot,jdbcType=INTEGER},
      </if>
      <if test="intro != null">
        #{intro,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qcby.model.Songer">
    update songer
    <set>
      <if test="tid != null">
        TID = #{tid,jdbcType=INTEGER},
      </if>
      <if test="srname != null">
        SRNAME = #{srname,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        AREA = #{area,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        PIC = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="isHot != null">
        IS_HOT = #{isHot,jdbcType=INTEGER},
      </if>
      <if test="intro != null">
        INTRO = #{intro,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where SRID = #{srid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qcby.model.Songer">
    update songer
    set TID = #{tid,jdbcType=INTEGER},
      SRNAME = #{srname,jdbcType=VARCHAR},
      AREA = #{area,jdbcType=VARCHAR},
      PIC = #{pic,jdbcType=VARCHAR},
      IS_HOT = #{isHot,jdbcType=INTEGER},
      INTRO = #{intro,jdbcType=LONGVARCHAR}
    where SRID = #{srid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qcby.model.Songer">
    update songer
    set TID = #{tid,jdbcType=INTEGER},
      SRNAME = #{srname,jdbcType=VARCHAR},
      AREA = #{area,jdbcType=VARCHAR},
      PIC = #{pic,jdbcType=VARCHAR},
      IS_HOT = #{isHot,jdbcType=INTEGER}
    where SRID = #{srid,jdbcType=INTEGER}
  </update>

  <resultMap id="selectPageMap" type="com.qcby.model.Songer" extends="ResultMapWithBLOBs">
    <association property="mtype" javaType="com.qcby.model.Mtype" resultMap="com.qcby.dao.MtypeMapper.BaseResultMap">

    </association>
  </resultMap>

  <select id="selectPage" parameterType="com.qcby.query.SongerQuery" resultMap="selectPageMap">
    select * from songer s left join mtype m on s.tid = m.tid
    <where>
      <if test="srname != null and srname != ''">
        s.srname like '%${srname}%'
      </if>
      <if test="area != null and area != ''">
        and s.area like '%${area}%'
      </if>
      <if test="tid != null">
        and s.tid = #{tid}
      </if>
    </where>
    limit #{startNum}, #{pageSize}
  </select>

  <select id="selectCount" parameterType="com.qcby.query.SongerQuery" resultType="int">
    select count(*) from songer s left join mtype m on s.tid = m.tid
    <where>
      <if test="srname != null and srname != ''">
        s.srname like '%${srname}%'
      </if>
      <if test="area != null and area != ''">
        and s.area like '%${area}%'
      </if>
      <if test="tid != null">
        and s.tid = #{tid}
      </if>
    </where>
  </select>

  <select id="selectAll" resultType="com.qcby.model.Songer">
    select * from songer
  </select>
  
  <resultMap id="getSongerSongMap" type="com.qcby.model.Songer" extends="ResultMapWithBLOBs">
    <association property="mtype" javaType="com.qcby.model.Mtype" resultMap="com.qcby.dao.MtypeMapper.BaseResultMap"></association>
    <collection property="songs" ofType="com.qcby.model.Song" resultMap="com.qcby.dao.SongMapper.BaseResultMap"></collection>

  </resultMap>
  <select id="getSongerSong" parameterType="int" resultMap="getSongerSongMap">
    select sr.SRID, sr.TID, sr.SRNAME, sr.AREA, sr.IS_HOT, sr.INTRO, s.*, m.* from
      songer sr left join song s on sr.SRID = s.SRID
      left join mtype m on sr.TID = m.TID
      where sr.SRID = #{srid}
  </select>
</mapper>